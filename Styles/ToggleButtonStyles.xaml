<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:converters="clr-namespace:XivToolsWpf.Converters"
	xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
		<ResourceDictionary>
			<converters:MaterialDesignBorderClipConverter x:Key="BorderClipConverter" />
		</ResourceDictionary>
	</ResourceDictionary.MergedDictionaries>

	<Style
		x:Key="TransparentToggleButton"
		TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="md:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignBody}" />
		<Setter Property="Margin" Value="1" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="MinWidth" Value="20" />
		<Setter Property="MinHeight" Value="20" />
		<Setter Property="SnapsToDevicePixels" Value="True" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">

					<Grid
						Cursor="Hand"
						TextBlock.Foreground="{DynamicResource MaterialDesignBodyLight}">
						<Border
							x:Name="HoverBorder"
							Background="{DynamicResource MaterialDesignCardBackground}"
							BorderBrush="{DynamicResource MaterialDesignCardBackground}"
							BorderThickness="1"
							CornerRadius="3"
							Opacity="0">
							<Border.Effect>
								<DropShadowEffect
									BlurRadius="5"
									Opacity="0.5"
									ShadowDepth="0" />
							</Border.Effect>
						</Border>

						<Border
							x:Name="Border"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="3" />

						<md:Ripple
							Padding="{TemplateBinding Padding}"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{TemplateBinding Content}"
							ContentStringFormat="{TemplateBinding ContentStringFormat}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							Focusable="False"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

							<md:Ripple.Clip>
								<MultiBinding Converter="{StaticResource BorderClipConverter}">
									<Binding
										ElementName="Border"
										Path="ActualWidth" />
									<Binding
										ElementName="Border"
										Path="ActualHeight" />
									<Binding
										ElementName="Border"
										Path="CornerRadius" />
									<Binding
										ElementName="Border"
										Path="BorderThickness" />
								</MultiBinding>
							</md:Ripple.Clip>

						</md:Ripple>

					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="HoverBorder" Property="Opacity" Value="1" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Opacity" Value="0" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="OutlineToggleButton"
		TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="md:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignBody}" />
		<Setter Property="Margin" Value="1" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="MinWidth" Value="20" />
		<Setter Property="MinHeight" Value="20" />
		<Setter Property="SnapsToDevicePixels" Value="True" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">

					<Grid
						Cursor="Hand"
						TextBlock.Foreground="{DynamicResource MaterialDesignBodyLight}">
						<Border
							x:Name="HoverBorder"
							Background="{DynamicResource MaterialDesignCardBackground}"
							BorderBrush="{DynamicResource MaterialDesignCardBackground}"
							BorderThickness="1"
							CornerRadius="3"
							Opacity="0">
							<Border.Effect>
								<DropShadowEffect
									BlurRadius="5"
									Opacity="0.5"
									ShadowDepth="0" />
							</Border.Effect>
						</Border>

						<Border
							x:Name="Border"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="3" />

						<md:Ripple
							Padding="{TemplateBinding Padding}"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							md:RippleAssist.ClipToBounds="False"
							Content="{TemplateBinding Content}"
							ContentStringFormat="{TemplateBinding ContentStringFormat}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							Focusable="False"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

							<md:Ripple.Clip>
								<MultiBinding Converter="{StaticResource BorderClipConverter}">
									<Binding
										ElementName="Border"
										Path="ActualWidth" />
									<Binding
										ElementName="Border"
										Path="ActualHeight" />
									<Binding
										ElementName="Border"
										Path="CornerRadius" />
									<Binding
										ElementName="Border"
										Path="BorderThickness" />
								</MultiBinding>
							</md:Ripple.Clip>

						</md:Ripple>

					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="HoverBorder" Property="Opacity" Value="1" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Opacity" Value="0" />
							<Setter Property="Opacity" Value="0.5" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="RoundToggleButton"
		TargetType="ToggleButton">

		<Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">

					<Grid
						Width="{TemplateBinding Width}"
						Height="{TemplateBinding Height}"
						Cursor="Hand">

						<Ellipse
							Name="HoverEllipse"
							Fill="Transparent"
							Stroke="{TemplateBinding Background}"
							StrokeThickness="1" />
						<Ellipse
							Name="CheckedEllipse"
							Fill="{TemplateBinding Background}"
							RenderTransformOrigin="0.5, 0.5">
							<Ellipse.RenderTransform>
								<ScaleTransform x:Name="CheckedEllipseScale" CenterX="0.5" CenterY="0.5" ScaleX="0" ScaleY="0" />
							</Ellipse.RenderTransform>
						</Ellipse>

						<ContentPresenter
							Name="contentPresenter"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}" />
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">

							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetName="CheckedEllipseScale"
											Storyboard.TargetProperty="ScaleX"
											Duration="0:0:0.2">
											<LinearDoubleKeyFrame
												KeyTime="0:0:0.0"
												Value="0" />
											<LinearDoubleKeyFrame
												KeyTime="0:0:0.1"
												Value="1.0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetName="CheckedEllipseScale"
											Storyboard.TargetProperty="ScaleY"
											Duration="0:0:0.2">
											<LinearDoubleKeyFrame
												KeyTime="0:0:0.0"
												Value="0" />
											<LinearDoubleKeyFrame
												KeyTime="0:0:0.1"
												Value="1.0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>

							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetName="CheckedEllipseScale"
											Storyboard.TargetProperty="ScaleX"
											Duration="0:0:0.2">
											<LinearDoubleKeyFrame
												KeyTime="0:0:0.0"
												Value="1.0" />
											<LinearDoubleKeyFrame
												KeyTime="0:0:0.1"
												Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetName="CheckedEllipseScale"
											Storyboard.TargetProperty="ScaleY"
											Duration="0:0:0.2">
											<LinearDoubleKeyFrame
												KeyTime="0:0:0.0"
												Value="1.0" />
											<LinearDoubleKeyFrame
												KeyTime="0:0:0.1"
												Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>

							<Setter Property="Foreground" Value="Black" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="TransparentIconToggleButton"
		TargetType="ToggleButton">
		<Setter Property="Foreground" Value="{DynamicResource MaterialDesignBodyLight}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="md:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignBody}" />
		<Setter Property="Margin" Value="1" />
		<Setter Property="Padding" Value="6,0,6,6" />
		<Setter Property="MinWidth" Value="18" />
		<Setter Property="MinHeight" Value="18" />
		<Setter Property="SnapsToDevicePixels" Value="True" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">

					<Grid
						Cursor="Hand"
						TextBlock.Foreground="{DynamicResource MaterialDesignBodyLight}">
						<Border
							x:Name="HoverBorder"
							Opacity="0"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							Style="{DynamicResource Panel}" />

						<Border
							x:Name="Border"
							Height="2"
							Margin="6,0,6,3"
							VerticalAlignment="Bottom"
							Background="{TemplateBinding BorderBrush}"
							BorderBrush="{TemplateBinding Background}"
							BorderThickness="0"
							CornerRadius="1"
							Opacity="0"
							SnapsToDevicePixels="True" />

						<ContentControl
							x:Name="Content"
							Margin="6,0"
							Padding="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{TemplateBinding Content}"
							ContentStringFormat="{TemplateBinding ContentStringFormat}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							Focusable="False"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

						<md:Ripple md:RippleAssist.ClipToBounds="False">
							<md:Ripple.Clip>
								<MultiBinding Converter="{StaticResource BorderClipConverter}">
									<Binding
										ElementName="HoverBorder"
										Path="ActualWidth" />
									<Binding
										ElementName="HoverBorder"
										Path="ActualHeight" />
									<Binding
										ElementName="HoverBorder"
										Path="CornerRadius" />
									<Binding
										ElementName="HoverBorder"
										Path="BorderThickness" />
								</MultiBinding>
							</md:Ripple.Clip>
						</md:Ripple>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">

							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="HoverBorder"
											Storyboard.TargetProperty="Opacity"
											From="0"
											To="1"
											Duration="00:00:00.1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>

							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="HoverBorder"
											Storyboard.TargetProperty="Opacity"
											From="1"
											To="0"
											Duration="00:00:00.2" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>

						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
							<Setter TargetName="Border" Property="Opacity" Value="1.0" />

							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ThicknessAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Storyboard.TargetName="Content"
											Storyboard.TargetProperty="Margin">
											<SplineThicknessKeyFrame
												KeyTime="00:00:00.00"
												Value="6, 0, 6, 0" />
											<SplineThicknessKeyFrame
												KeyTime="00:00:00.10"
												Value="6, 0, 6, 8" />
											<SplineThicknessKeyFrame
												KeyTime="00:00:00.15"
												Value="6, 0, 6, 5" />
											<SplineThicknessKeyFrame
												KeyTime="00:00:00.18"
												Value="6, 0, 6, 6" />
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>

							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ThicknessAnimation
											Storyboard.TargetName="Content"
											Storyboard.TargetProperty="Margin"
											From="6, 0, 6, 6"
											To="6, 0, 6, 0"
											Duration="00:00:00.30">
											<ThicknessAnimation.EasingFunction>
												<SineEase />
											</ThicknessAnimation.EasingFunction>
										</ThicknessAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="Content"
											Storyboard.TargetProperty="Opacity"
											From="1"
											To="0.5"
											Duration="00:00:00.1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>

							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="Content"
											Storyboard.TargetProperty="Opacity"
											From="0.5"
											To="1"
											Duration="00:00:00.2" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="InvisibleToggleButton"
		TargetType="ToggleButton">
		<Setter Property="Foreground" Value="{DynamicResource MaterialDesignBodyLight}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="SnapsToDevicePixels" Value="True" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">

					<Grid
						Cursor="Hand"
						TextBlock.Foreground="{DynamicResource MaterialDesignBodyLight}">

						<md:Ripple
							Padding="{TemplateBinding Padding}"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{TemplateBinding Content}"
							ContentStringFormat="{TemplateBinding ContentStringFormat}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							Focusable="False"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

					</Grid>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>